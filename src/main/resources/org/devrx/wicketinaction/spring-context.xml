<?xml version="1.0" encoding="UTF-8"?>
<!-- Copyright 2012 Bright Interactive, All Rights Reserved. -->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd">

    <!-- Search for components annotated with @Service, @Repository, @Controller
         and @Component in the classpath and automatically instantiate them as
         beans in this context.
         Also injects dependencies specified by @Resource etc. like 
         <context:annotation-config/> would -->
    <context:component-scan base-package="org.devrx.wicketinaction"/>

    <bean id="propertyConfigurer"
          class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:database.properties</value>
            </list>
        </property>
    </bean>

    <!-- the transactional advice (what 'happens'; see the <aop:advisor/> bean below) -->
    <!--
    <tx:advice id="txAdvice" transaction-manager="txManager">
        <tx:attributes>
            <!== all methods starting with 'get' are read-only ==>
            <tx:method name="get*" read-only="true"/>
            <!== other methods use the default read/write transaction settings ==>
            <tx:method name="*"/>
        </tx:attributes>
    </tx:advice>
    -->

    <!-- ensure that the above transactional advice runs for any execution
         of an operation defined in a service.*Manager class -->
    <!--
    <aop:config>
        <aop:pointcut id="managerOperation"
                      expression="execution(* org.devrx.wicketinaction..*Manager.*(..)) ||
                                  execution(* org.devrx.wicketinaction..*ManagerImpl.*(..))"/>
        <aop:advisor advice-ref="txAdvice" pointcut-ref="managerOperation"/>
    </aop:config>
    -->

    <!--
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${hibernate.connection.driver_class}"/>
        <property name="url" value="${hibernate.connection.url}"/>
        <property name="username" value="${hibernate.connection.username}"/>
        <property name="password" value="${hibernate.connection.password}"/>
    </bean>

    <bean id="sessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="configLocation" value="classpath:hibernate.cfg.xml"/>
    </bean>

    <bean id="txManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>
    -->

    <!-- Translates Hibernate exceptions into Spring exceptions for beans
         that are annotated with @Repository -->
    <!--
    <bean class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor"/>
    -->

</beans>
